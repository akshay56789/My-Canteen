{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StackRouter, useNavigationBuilder } from \"@react-navigation/native\";\nimport * as React from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useContextKey } from \"../Route\";\nimport { useFilterScreenChildren } from \"../layouts/withLayoutContext\";\nimport { useSortedScreens } from \"../useScreens\";\nimport { Screen } from \"./Screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var NavigatorContext = React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigatorContext.displayName = \"NavigatorContext\";\n}\n\nexport function Navigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n      screenOptions = _ref.screenOptions,\n      children = _ref.children,\n      router = _ref.router;\n  var contextKey = useContextKey();\n\n  var _useFilterScreenChild = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey: contextKey\n  }),\n      screens = _useFilterScreenChild.screens,\n      otherSlot = _useFilterScreenChild.children;\n\n  var sorted = useSortedScreens(screens != null ? screens : []);\n\n  if (!sorted.length) {\n    console.warn(\"Navigator at \\\"\" + contextKey + \"\\\" has no children.\");\n    return null;\n  }\n\n  return _jsx(QualifiedNavigator, {\n    initialRouteName: initialRouteName,\n    screenOptions: screenOptions,\n    screens: sorted,\n    contextKey: contextKey,\n    router: router,\n    children: otherSlot\n  });\n}\n\nfunction QualifiedNavigator(_ref2) {\n  var initialRouteName = _ref2.initialRouteName,\n      screenOptions = _ref2.screenOptions,\n      children = _ref2.children,\n      screens = _ref2.screens,\n      contextKey = _ref2.contextKey,\n      _ref2$router = _ref2.router,\n      router = _ref2$router === void 0 ? StackRouter : _ref2$router;\n\n  var _useNavigationBuilder = useNavigationBuilder(router, {\n    id: contextKey,\n    children: screens,\n    screenOptions: screenOptions,\n    initialRouteName: initialRouteName\n  }),\n      state = _useNavigationBuilder.state,\n      navigation = _useNavigationBuilder.navigation,\n      descriptors = _useNavigationBuilder.descriptors,\n      NavigationContent = _useNavigationBuilder.NavigationContent;\n\n  return _jsx(NavigatorContext.Provider, {\n    value: {\n      contextKey: contextKey,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n      router: router\n    },\n    children: _jsx(NavigationContent, {\n      children: children\n    })\n  });\n}\n\nexport function useNavigatorContext() {\n  var context = React.useContext(NavigatorContext);\n\n  if (!context) {\n    throw new Error(\"useNavigatorContext must be used within a <Navigator />\");\n  }\n\n  return context;\n}\nexport function useSlot() {\n  var _descriptors$current$, _descriptors$current$2;\n\n  var context = useNavigatorContext();\n  var state = context.state,\n      descriptors = context.descriptors;\n  var current = state.routes.find(function (route, i) {\n    return state.index === i;\n  });\n\n  if (!current) {\n    return null;\n  }\n\n  return (_descriptors$current$ = (_descriptors$current$2 = descriptors[current.key]) == null ? void 0 : _descriptors$current$2.render()) != null ? _descriptors$current$ : null;\n}\nexport function Slot(props) {\n  var contextKey = useContextKey();\n  var context = React.useContext(NavigatorContext);\n\n  if ((context == null ? void 0 : context.contextKey) !== contextKey) {\n    return _jsx(Navigator, _objectSpread(_objectSpread({}, props), {}, {\n      children: _jsx(QualifiedSlot, {})\n    }));\n  }\n\n  return _jsx(QualifiedSlot, {});\n}\nexport function QualifiedSlot() {\n  return useSlot();\n}\nexport function DefaultNavigator() {\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(Navigator, {\n      children: _jsx(QualifiedSlot, {})\n    })\n  });\n}\nNavigator.Slot = Slot;\nNavigator.useContext = useNavigatorContext;\nNavigator.Screen = Screen;","map":{"version":3,"names":["StackRouter","useNavigationBuilder","React","SafeAreaView","useContextKey","useFilterScreenChildren","useSortedScreens","Screen","NavigatorContext","createContext","process","env","NODE_ENV","displayName","Navigator","initialRouteName","screenOptions","children","router","contextKey","isCustomNavigator","screens","otherSlot","sorted","length","console","warn","QualifiedNavigator","id","state","navigation","descriptors","NavigationContent","useNavigatorContext","context","useContext","Error","useSlot","current","routes","find","route","i","index","key","render","Slot","props","QualifiedSlot","DefaultNavigator","flex"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/views/Navigator.tsx"],"sourcesContent":["import {\n  RouterFactory,\n  StackRouter,\n  useNavigationBuilder,\n} from \"@react-navigation/native\";\nimport * as React from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\nimport { useContextKey } from \"../Route\";\nimport { useFilterScreenChildren } from \"../layouts/withLayoutContext\";\nimport { useSortedScreens } from \"../useScreens\";\nimport { Screen } from \"./Screen\";\n\ntype NavigatorTypes = ReturnType<typeof useNavigationBuilder>;\n\n// TODO: This might already exist upstream, maybe something like `useCurrentRender` ?\nexport const NavigatorContext = React.createContext<{\n  contextKey: string;\n  state: NavigatorTypes[\"state\"];\n  navigation: NavigatorTypes[\"navigation\"];\n  descriptors: NavigatorTypes[\"descriptors\"];\n  router: RouterFactory<any, any, any>;\n} | null>(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigatorContext.displayName = \"NavigatorContext\";\n}\n\nexport type NavigatorProps = {\n  initialRouteName?: Parameters<\n    typeof useNavigationBuilder\n  >[1][\"initialRouteName\"];\n  screenOptions?: Parameters<typeof useNavigationBuilder>[1][\"screenOptions\"];\n  children?: Parameters<typeof useNavigationBuilder>[1][\"children\"];\n  router?: Parameters<typeof useNavigationBuilder>[0];\n};\n\n/** An unstyled custom navigator. Good for basic web layouts */\nexport function Navigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  router,\n}: NavigatorProps) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens, children: otherSlot } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sorted = useSortedScreens(screens ?? []);\n\n  if (!sorted.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <QualifiedNavigator\n      initialRouteName={initialRouteName}\n      screenOptions={screenOptions}\n      screens={sorted}\n      contextKey={contextKey}\n      router={router}\n    >\n      {otherSlot}\n    </QualifiedNavigator>\n  );\n}\n\nfunction QualifiedNavigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  screens,\n  contextKey,\n  router = StackRouter,\n}: NavigatorProps & { contextKey: string; screens: React.ReactNode[] }) {\n  const { state, navigation, descriptors, NavigationContent } =\n    useNavigationBuilder(router, {\n      // Used for getting the parent with navigation.getParent('/normalized/path')\n      id: contextKey,\n      children: screens,\n      screenOptions,\n      initialRouteName,\n    });\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        contextKey,\n        state,\n        navigation,\n        descriptors,\n        router,\n      }}\n    >\n      <NavigationContent>{children}</NavigationContent>\n    </NavigatorContext.Provider>\n  );\n}\n\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error(\"useNavigatorContext must be used within a <Navigator />\");\n  }\n  return context;\n}\n\nexport function useSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  const current = state.routes.find((route, i) => {\n    return state.index === i;\n  });\n\n  if (!current) {\n    return null;\n  }\n\n  return descriptors[current.key]?.render() ?? null;\n}\n\n/** Renders the currently selected content. */\nexport function Slot(props: Omit<NavigatorProps, \"children\">) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n  // Ensure the context is for the current contextKey\n  if (context?.contextKey !== contextKey) {\n    // Qualify the content and re-export.\n    return (\n      <Navigator {...props}>\n        <QualifiedSlot />\n      </Navigator>\n    );\n  }\n\n  return <QualifiedSlot />;\n}\n\nexport function QualifiedSlot() {\n  return useSlot();\n}\n\nexport function DefaultNavigator() {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <Navigator>\n        <QualifiedSlot />\n      </Navigator>\n    </SafeAreaView>\n  );\n}\n\nNavigator.Slot = Slot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}