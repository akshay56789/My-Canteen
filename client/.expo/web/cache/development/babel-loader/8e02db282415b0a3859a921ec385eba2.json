{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildUrlForBundle = void 0;\n\nfunction buildUrlForBundle(bundlePath) {\n  return \"/\" + bundlePath.replace(/^\\/+/, \"\");\n}\n\nexports.buildUrlForBundle = buildUrlForBundle;","map":{"version":3,"sources":["../../src/async-require/buildUrlForBundle.ts"],"names":[],"mappings":";;;;;;;AAaA,SAAgB,iBAAhB,CAAkC,UAAlC,EAAoD;EAGlD,OAAO,MAAM,UAAU,CAAC,OAAX,CAAmB,MAAnB,EAA2B,EAA3B,CAAb;AACD;;AAJD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Given a path and some optional additional query parameters, create the dev server bundle URL.\n * @param bundlePath like `/foobar`\n * @param params like `{ platform: \"web\" }`\n * @returns a URL like \"/foobar.bundle?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\"\n */\nexport function buildUrlForBundle(bundlePath: string): string {\n  // NOTE(EvanBacon): This must come from the window origin (at least in dev mode).\n  // Otherwise Metro will crash from attempting to load a bundle that doesn't exist.\n  return \"/\" + bundlePath.replace(/^\\/+/, \"\");\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}