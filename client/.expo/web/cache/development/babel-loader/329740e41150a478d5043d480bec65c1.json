{"ast":null,"code":"import { useNavigation as useUpstreamNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { useContextKey } from \"./Route\";\nimport { getNameFromFilePath } from \"./matchers\";\nexport function useNavigation(parent) {\n  var navigation = useUpstreamNavigation();\n  var contextKey = useContextKey();\n  var normalizedParent = React.useMemo(function () {\n    if (!parent) {\n      return null;\n    }\n\n    var normalized = getNameFromFilePath(parent);\n\n    if (parent.startsWith(\".\")) {\n      return relativePaths(contextKey, parent);\n    }\n\n    return normalized;\n  }, [contextKey, parent]);\n\n  if (normalizedParent != null) {\n    var parentNavigation = navigation.getParent(normalizedParent);\n\n    if (!parentNavigation) {\n      throw new Error(\"Could not find parent navigation with route \\\"\" + parent + \"\\\".\" + (normalizedParent !== parent ? \" (normalized: \" + normalizedParent + \")\" : \"\"));\n    }\n\n    return parentNavigation;\n  }\n\n  return navigation;\n}\nexport function resolveParentId(contextKey, parentId) {\n  if (!parentId) {\n    return null;\n  }\n\n  if (parentId.startsWith(\".\")) {\n    return getNameFromFilePath(relativePaths(contextKey, parentId));\n  }\n\n  return getNameFromFilePath(parentId);\n}\n\nfunction relativePaths(from, to) {\n  var fromParts = from.split(\"/\").filter(Boolean);\n  var toParts = to.split(\"/\").filter(Boolean);\n\n  for (var part of toParts) {\n    if (part === \"..\") {\n      if (fromParts.length === 0) {\n        throw new Error(\"Cannot resolve path \\\"\" + to + \"\\\" relative to \\\"\" + from + \"\\\"\");\n      }\n\n      fromParts.pop();\n    } else if (part === \".\") {} else {\n      fromParts.push(part);\n    }\n  }\n\n  return \"/\" + fromParts.join(\"/\");\n}","map":{"version":3,"names":["useNavigation","useUpstreamNavigation","React","useContextKey","getNameFromFilePath","parent","navigation","contextKey","normalizedParent","useMemo","normalized","startsWith","relativePaths","parentNavigation","getParent","Error","resolveParentId","parentId","from","to","fromParts","split","filter","Boolean","toParts","part","length","pop","push","join"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/useNavigation.ts"],"sourcesContent":["import {\n  useNavigation as useUpstreamNavigation,\n  NavigationProp,\n} from \"@react-navigation/native\";\nimport React from \"react\";\n\nimport { useContextKey } from \"./Route\";\nimport { getNameFromFilePath } from \"./matchers\";\n\n/**\n * Return the navigation object for the current route.\n * @param parent Provide an absolute path like `/(root)` to the parent route or a relative path like `../../` to the parent route.\n * @returns the navigation object for the provided route.\n */\nexport function useNavigation<\n  T = NavigationProp<ReactNavigation.RootParamList>\n>(parent?: string): T {\n  const navigation = useUpstreamNavigation<any>();\n\n  const contextKey = useContextKey();\n  const normalizedParent = React.useMemo(() => {\n    if (!parent) {\n      return null;\n    }\n    const normalized = getNameFromFilePath(parent);\n\n    if (parent.startsWith(\".\")) {\n      return relativePaths(contextKey, parent);\n    }\n    return normalized;\n  }, [contextKey, parent]);\n\n  if (normalizedParent != null) {\n    const parentNavigation = navigation.getParent(normalizedParent);\n\n    // TODO: Maybe print a list of parents...\n\n    if (!parentNavigation) {\n      throw new Error(\n        `Could not find parent navigation with route \"${parent}\".` +\n          (normalizedParent !== parent\n            ? ` (normalized: ${normalizedParent})`\n            : \"\")\n      );\n    }\n    return parentNavigation;\n  }\n  return navigation;\n}\n\nexport function resolveParentId(\n  contextKey: string,\n  parentId?: string | null\n): string | null {\n  if (!parentId) {\n    return null;\n  }\n\n  if (parentId.startsWith(\".\")) {\n    return getNameFromFilePath(relativePaths(contextKey, parentId));\n  }\n  return getNameFromFilePath(parentId);\n}\n\n// Resolve a path like `../` relative to a path like `/foo/bar`\nfunction relativePaths(from: string, to: string): string {\n  const fromParts = from.split(\"/\").filter(Boolean);\n  const toParts = to.split(\"/\").filter(Boolean);\n\n  for (const part of toParts) {\n    if (part === \"..\") {\n      if (fromParts.length === 0) {\n        throw new Error(`Cannot resolve path \"${to}\" relative to \"${from}\"`);\n      }\n      fromParts.pop();\n    } else if (part === \".\") {\n      // Ignore\n    } else {\n      fromParts.push(part);\n    }\n  }\n\n  return \"/\" + fromParts.join(\"/\");\n}\n"],"mappings":"AAAA,SACEA,aAAa,IAAIC,qBADnB,QAGO,0BAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT;AACA,SAASC,mBAAT;AAOA,OAAO,SAASJ,aAAT,CAELK,MAFK,EAEe;EACpB,IAAMC,UAAU,GAAGL,qBAAqB,EAAxC;EAEA,IAAMM,UAAU,GAAGJ,aAAa,EAAhC;EACA,IAAMK,gBAAgB,GAAGN,KAAK,CAACO,OAAN,CAAc,YAAM;IAC3C,IAAI,CAACJ,MAAL,EAAa;MACX,OAAO,IAAP;IACD;;IACD,IAAMK,UAAU,GAAGN,mBAAmB,CAACC,MAAD,CAAtC;;IAEA,IAAIA,MAAM,CAACM,UAAP,CAAkB,GAAlB,CAAJ,EAA4B;MAC1B,OAAOC,aAAa,CAACL,UAAD,EAAaF,MAAb,CAApB;IACD;;IACD,OAAOK,UAAP;EACD,CAVwB,EAUtB,CAACH,UAAD,EAAaF,MAAb,CAVsB,CAAzB;;EAYA,IAAIG,gBAAgB,IAAI,IAAxB,EAA8B;IAC5B,IAAMK,gBAAgB,GAAGP,UAAU,CAACQ,SAAX,CAAqBN,gBAArB,CAAzB;;IAIA,IAAI,CAACK,gBAAL,EAAuB;MACrB,MAAM,IAAIE,KAAJ,CACJ,mDAAgDV,MAAhD,YACGG,gBAAgB,KAAKH,MAArB,sBACoBG,gBADpB,SAEG,EAHN,CADI,CAAN;IAMD;;IACD,OAAOK,gBAAP;EACD;;EACD,OAAOP,UAAP;AACD;AAED,OAAO,SAASU,eAAT,CACLT,UADK,EAELU,QAFK,EAGU;EACf,IAAI,CAACA,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EAED,IAAIA,QAAQ,CAACN,UAAT,CAAoB,GAApB,CAAJ,EAA8B;IAC5B,OAAOP,mBAAmB,CAACQ,aAAa,CAACL,UAAD,EAAaU,QAAb,CAAd,CAA1B;EACD;;EACD,OAAOb,mBAAmB,CAACa,QAAD,CAA1B;AACD;;AAGD,SAASL,aAAT,CAAuBM,IAAvB,EAAqCC,EAArC,EAAyD;EACvD,IAAMC,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuBC,OAAvB,CAAlB;EACA,IAAMC,OAAO,GAAGL,EAAE,CAACE,KAAH,CAAS,GAAT,EAAcC,MAAd,CAAqBC,OAArB,CAAhB;;EAEA,KAAK,IAAME,IAAX,IAAmBD,OAAnB,EAA4B;IAC1B,IAAIC,IAAI,KAAK,IAAb,EAAmB;MACjB,IAAIL,SAAS,CAACM,MAAV,KAAqB,CAAzB,EAA4B;QAC1B,MAAM,IAAIX,KAAJ,4BAAkCI,EAAlC,yBAAsDD,IAAtD,QAAN;MACD;;MACDE,SAAS,CAACO,GAAV;IACD,CALD,MAKO,IAAIF,IAAI,KAAK,GAAb,EAAkB,CAExB,CAFM,MAEA;MACLL,SAAS,CAACQ,IAAV,CAAeH,IAAf;IACD;EACF;;EAED,OAAO,MAAML,SAAS,CAACS,IAAV,CAAe,GAAf,CAAb;AACD"},"metadata":{},"sourceType":"module"}