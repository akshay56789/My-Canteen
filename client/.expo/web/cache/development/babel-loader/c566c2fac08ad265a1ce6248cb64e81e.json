{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { useExpoRouter } from \"../global-state/router-store\";\nimport { stripGroupSegmentsFromPath } from \"../matchers\";\n\nfunction eventShouldPreventDefault(e) {\n  if (e != null && e.defaultPrevented) {\n    return false;\n  }\n\n  if (\"button\" in e && !e.metaKey && !e.altKey && !e.ctrlKey && !e.shiftKey && (e.button == null || e.button === 0) && [undefined, null, \"\", \"self\"].includes(e.currentTarget.target)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default function useLinkToPathProps(props) {\n  var _useExpoRouter = useExpoRouter(),\n      linkTo = _useExpoRouter.linkTo;\n\n  var onPress = function onPress(e) {\n    var shouldHandle = false;\n\n    if (Platform.OS !== \"web\" || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (eventShouldPreventDefault(e)) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      linkTo(props.href, props.replace ? \"REPLACE\" : undefined);\n    }\n  };\n\n  return {\n    href: stripGroupSegmentsFromPath(props.href),\n    accessibilityRole: \"link\",\n    onPress: onPress\n  };\n}","map":{"version":3,"names":["useExpoRouter","stripGroupSegmentsFromPath","eventShouldPreventDefault","e","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","undefined","includes","currentTarget","target","useLinkToPathProps","props","linkTo","onPress","shouldHandle","Platform","OS","preventDefault","href","replace","accessibilityRole"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/link/useLinkToPathProps.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { GestureResponderEvent, Platform } from \"react-native\";\n\nimport { useExpoRouter } from \"../global-state/router-store\";\nimport { stripGroupSegmentsFromPath } from \"../matchers\";\n\nfunction eventShouldPreventDefault(\n  e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n): boolean {\n  if (e?.defaultPrevented) {\n    return false;\n  }\n\n  if (\n    // Only check MouseEvents\n    \"button\" in e &&\n    // ignore clicks with modifier keys\n    !e.metaKey &&\n    !e.altKey &&\n    !e.ctrlKey &&\n    !e.shiftKey &&\n    (e.button == null || e.button === 0) && // Only accept left clicks\n    [undefined, null, \"\", \"self\"].includes(e.currentTarget.target) // let browser handle \"target=_blank\" etc.\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default function useLinkToPathProps(props: {\n  href: string;\n  replace?: boolean;\n}) {\n  const { linkTo } = useExpoRouter();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== \"web\" || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (eventShouldPreventDefault(e)) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      linkTo(props.href, props.replace ? \"REPLACE\" : undefined);\n    }\n  };\n\n  return {\n    href: stripGroupSegmentsFromPath(props.href),\n    accessibilityRole: \"link\" as const,\n    onPress,\n  };\n}\n"],"mappings":";AAGA,SAASA,aAAT;AACA,SAASC,0BAAT;;AAEA,SAASC,yBAAT,CACEC,CADF,EAEW;EACT,IAAIA,CAAJ,YAAIA,CAAC,CAAEC,gBAAP,EAAyB;IACvB,OAAO,KAAP;EACD;;EAED,IAEE,YAAYD,CAAZ,IAEA,CAACA,CAAC,CAACE,OAFH,IAGA,CAACF,CAAC,CAACG,MAHH,IAIA,CAACH,CAAC,CAACI,OAJH,IAKA,CAACJ,CAAC,CAACK,QALH,KAMCL,CAAC,CAACM,MAAF,IAAY,IAAZ,IAAoBN,CAAC,CAACM,MAAF,KAAa,CANlC,KAOA,CAACC,SAAD,EAAY,IAAZ,EAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,QAA9B,CAAuCR,CAAC,CAACS,aAAF,CAAgBC,MAAvD,CATF,EAUE;IACA,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD;;AAED,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAGZ;EACD,qBAAmBf,aAAa,EAAhC;EAAA,IAAQgB,MAAR,kBAAQA,MAAR;;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CACdd,CADc,EAEX;IACH,IAAIe,YAAY,GAAG,KAAnB;;IAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,CAACjB,CAA9B,EAAiC;MAC/Be,YAAY,GAAGf,CAAC,GAAG,CAACA,CAAC,CAACC,gBAAN,GAAyB,IAAzC;IACD,CAFD,MAEO,IAAIF,yBAAyB,CAACC,CAAD,CAA7B,EAAkC;MACvCA,CAAC,CAACkB,cAAF;MACAH,YAAY,GAAG,IAAf;IACD;;IAED,IAAIA,YAAJ,EAAkB;MAChBF,MAAM,CAACD,KAAK,CAACO,IAAP,EAAaP,KAAK,CAACQ,OAAN,GAAgB,SAAhB,GAA4Bb,SAAzC,CAAN;IACD;EACF,CAfD;;EAiBA,OAAO;IACLY,IAAI,EAAErB,0BAA0B,CAACc,KAAK,CAACO,IAAP,CAD3B;IAELE,iBAAiB,EAAE,MAFd;IAGLP,OAAO,EAAPA;EAHK,CAAP;AAKD"},"metadata":{},"sourceType":"module"}