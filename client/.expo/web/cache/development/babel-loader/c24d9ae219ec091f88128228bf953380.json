{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useExpoRouter } from \"../global-state/router-store\";\nexport function useLoadedNavigation() {\n  var _useExpoRouter = useExpoRouter(),\n      navigationRef = _useExpoRouter.navigationRef;\n\n  var navigation = useNavigation();\n  var isMounted = useRef(true);\n  var pending = useRef([]);\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  var flush = useCallback(function () {\n    if (isMounted.current) {\n      var pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach(function (callback) {\n        callback(navigation);\n      });\n    }\n  }, [navigation]);\n  useEffect(function () {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n  var push = useCallback(function (fn) {\n    pending.current.push(fn);\n\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n  return push;\n}\nexport function useOptionalNavigation() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      navigation = _useState2[0],\n      setNavigation = _useState2[1];\n\n  var loadNavigation = useLoadedNavigation();\n  useEffect(function () {\n    loadNavigation(function (nav) {\n      return setNavigation(nav);\n    });\n  }, []);\n  return navigation;\n}","map":{"version":3,"names":["useNavigation","useCallback","useState","useEffect","useRef","useExpoRouter","useLoadedNavigation","navigationRef","navigation","isMounted","pending","current","flush","pendingCallbacks","forEach","callback","push","fn","useOptionalNavigation","setNavigation","loadNavigation","nav"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/link/useLoadedNavigation.ts"],"sourcesContent":["import { NavigationProp, useNavigation } from \"@react-navigation/native\";\nimport { useCallback, useState, useEffect, useRef } from \"react\";\n\nimport { useExpoRouter } from \"../global-state/router-store\";\n\ntype GenericNavigation = NavigationProp<ReactNavigation.RootParamList>;\n\n/** Returns a callback which is invoked when the navigation state has loaded. */\nexport function useLoadedNavigation() {\n  const { navigationRef } = useExpoRouter();\n  const navigation = useNavigation();\n  const isMounted = useRef(true);\n  const pending = useRef<((navigation: GenericNavigation) => void)[]>([]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const flush = useCallback(() => {\n    if (isMounted.current) {\n      const pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach((callback) => {\n        callback(navigation);\n      });\n    }\n  }, [navigation]);\n\n  useEffect(() => {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n\n  const push = useCallback(\n    (fn: (navigation: GenericNavigation) => void) => {\n      pending.current.push(fn);\n      if (navigationRef.current) {\n        flush();\n      }\n    },\n    [flush]\n  );\n\n  return push;\n}\n\nexport function useOptionalNavigation(): GenericNavigation | null {\n  const [navigation, setNavigation] = useState<GenericNavigation | null>(null);\n  const loadNavigation = useLoadedNavigation();\n\n  useEffect(() => {\n    loadNavigation((nav) => setNavigation(nav));\n  }, []);\n\n  return navigation;\n}\n"],"mappings":";AAAA,SAAyBA,aAAzB,QAA8C,0BAA9C;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA2CC,MAA3C,QAAyD,OAAzD;AAEA,SAASC,aAAT;AAKA,OAAO,SAASC,mBAAT,GAA+B;EACpC,qBAA0BD,aAAa,EAAvC;EAAA,IAAQE,aAAR,kBAAQA,aAAR;;EACA,IAAMC,UAAU,GAAGR,aAAa,EAAhC;EACA,IAAMS,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;EACA,IAAMM,OAAO,GAAGN,MAAM,CAA8C,EAA9C,CAAtB;EAEAD,SAAS,CAAC,YAAM;IACdM,SAAS,CAACE,OAAV,GAAoB,IAApB;IACA,OAAO,YAAM;MACXF,SAAS,CAACE,OAAV,GAAoB,KAApB;IACD,CAFD;EAGD,CALQ,EAKN,EALM,CAAT;EAOA,IAAMC,KAAK,GAAGX,WAAW,CAAC,YAAM;IAC9B,IAAIQ,SAAS,CAACE,OAAd,EAAuB;MACrB,IAAME,gBAAgB,GAAGH,OAAO,CAACC,OAAjC;MACAD,OAAO,CAACC,OAAR,GAAkB,EAAlB;MACAE,gBAAgB,CAACC,OAAjB,CAAyB,UAACC,QAAD,EAAc;QACrCA,QAAQ,CAACP,UAAD,CAAR;MACD,CAFD;IAGD;EACF,CARwB,EAQtB,CAACA,UAAD,CARsB,CAAzB;EAUAL,SAAS,CAAC,YAAM;IACd,IAAII,aAAa,CAACI,OAAlB,EAA2B;MACzBC,KAAK;IACN;EACF,CAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;EAMA,IAAMI,IAAI,GAAGf,WAAW,CACtB,UAACgB,EAAD,EAAiD;IAC/CP,OAAO,CAACC,OAAR,CAAgBK,IAAhB,CAAqBC,EAArB;;IACA,IAAIV,aAAa,CAACI,OAAlB,EAA2B;MACzBC,KAAK;IACN;EACF,CANqB,EAOtB,CAACA,KAAD,CAPsB,CAAxB;EAUA,OAAOI,IAAP;AACD;AAED,OAAO,SAASE,qBAAT,GAA2D;EAChE,gBAAoChB,QAAQ,CAA2B,IAA3B,CAA5C;EAAA;EAAA,IAAOM,UAAP;EAAA,IAAmBW,aAAnB;;EACA,IAAMC,cAAc,GAAGd,mBAAmB,EAA1C;EAEAH,SAAS,CAAC,YAAM;IACdiB,cAAc,CAAC,UAACC,GAAD;MAAA,OAASF,aAAa,CAACE,GAAD,CAAtB;IAAA,CAAD,CAAd;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAOb,UAAP;AACD"},"metadata":{},"sourceType":"module"}