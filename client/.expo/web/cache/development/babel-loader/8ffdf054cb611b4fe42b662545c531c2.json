{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stacktrace_parser_1 = require(\"stacktrace-parser\");\n\nfunction parseErrorStack(stack) {\n  if (stack == null) {\n    return [];\n  }\n\n  if (Array.isArray(stack)) {\n    return stack;\n  }\n\n  if (global.HermesInternal) {\n    return require(\"./parseHermesStack\").parseErrorStack(stack);\n  }\n\n  return (0, stacktrace_parser_1.parse)(stack).map(function (frame) {\n    return _objectSpread(_objectSpread({}, frame), {}, {\n      column: frame.column != null ? frame.column - 1 : null\n    });\n  });\n}\n\nexports.default = parseErrorStack;","map":{"version":3,"sources":["../../../../src/error-overlay/modules/parseErrorStack/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,SAAS,eAAT,CACE,KADF,EACgB;EAEd,IAAI,KAAK,IAAI,IAAb,EAAmB;IACjB,OAAO,EAAP;EACD;;EACD,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;IACxB,OAAO,KAAP;EACD;;EAID,IAAI,MAAM,CAAC,cAAX,EAA2B;IACzB,OAAO,OAAO,sBAAP,CAA8B,eAA9B,CAA8C,KAA9C,CAAP;EACD;;EAED,OAAO,CAAA,GAAA,mBAAA,CAAA,KAAA,EAAM,KAAN,EAAa,GAAb,CAAiB,UAAC,KAAD,EAAU;IAEhC,uCACK,KADL;MAEE,MAAM,EAAE,KAAK,CAAC,MAAN,IAAgB,IAAhB,GAAuB,KAAK,CAAC,MAAN,GAAe,CAAtC,GAA0C;IAFpD;EAID,CANM,CAAP;AAOD;;AAED,OAAA,CAAA,OAAA,GAAe,eAAf","sourcesContent":["import { parse, StackFrame } from \"stacktrace-parser\";\n\nfunction parseErrorStack(\n  stack?: string\n): (StackFrame & { collapse?: boolean })[] {\n  if (stack == null) {\n    return [];\n  }\n  if (Array.isArray(stack)) {\n    return stack;\n  }\n\n  // Native support for parsing for non-standard Hermes stack traces.\n  // @ts-expect-error: HermesInternal is not a global variable, but it is injected by the Hermes VM.\n  if (global.HermesInternal) {\n    return require(\"./parseHermesStack\").parseErrorStack(stack);\n  }\n\n  return parse(stack).map((frame) => {\n    // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`\n    return {\n      ...frame,\n      column: frame.column != null ? frame.column - 1 : null,\n    };\n  });\n}\n\nexport default parseErrorStack;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}