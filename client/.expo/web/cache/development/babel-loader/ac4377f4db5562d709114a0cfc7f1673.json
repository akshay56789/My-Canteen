{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseErrorStack = exports.LogBoxLog = void 0;\n\nvar LogBoxLog_1 = require(\"./error-overlay/Data/LogBoxLog\");\n\nObject.defineProperty(exports, \"LogBoxLog\", {\n  enumerable: true,\n  get: function get() {\n    return LogBoxLog_1.LogBoxLog;\n  }\n});\n\nvar parseErrorStack_1 = __importDefault(require(\"./error-overlay/modules/parseErrorStack\"));\n\nexports.parseErrorStack = parseErrorStack_1.default;\n\n__exportStar(require(\"./error-overlay/formatProjectFilePath\"), exports);","map":{"version":3,"sources":["../src/symbolicate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,WAAA,GAAA,OAAA,kCAAA;;AAGS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,WAAA,EAAA;EAAA,UAAA,EAAA,IAAA;EAAA,GAAA,EAAA,eAAA;IAAA,OAHA,WAAA,CAAA,SAGA;EAHS;AAGT,CAAA;;AAFT,IAAA,iBAAA,GAAA,eAAA,CAAA,OAAA,2CAAA,CAAA;;AAEoB,OAAA,CAAA,eAAA,GAFb,iBAAA,CAAA,OAEa;;AAEpB,YAAA,CAAA,OAAA,yCAAA,EAAA,OAAA,CAAA","sourcesContent":["import { LogBoxLog } from \"./error-overlay/Data/LogBoxLog\";\nimport parseErrorStack from \"./error-overlay/modules/parseErrorStack\";\n\nexport { LogBoxLog, parseErrorStack };\n\nexport * from \"./error-overlay/formatProjectFilePath\";\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}