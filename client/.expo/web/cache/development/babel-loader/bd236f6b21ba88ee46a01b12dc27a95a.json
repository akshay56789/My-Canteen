{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogBoxMessage = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar cleanContent = function cleanContent(content) {\n  return content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, \"\");\n};\n\nfunction LogBoxMessage(props) {\n  var _props$message = props.message,\n      content = _props$message.content,\n      substitutions = _props$message.substitutions;\n\n  if (props.plaintext === true) {\n    return react_1.default.createElement(react_native_1.Text, null, cleanContent(content));\n  }\n\n  var maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  var substitutionStyle = props.style;\n  var elements = [];\n  var length = 0;\n\n  var createUnderLength = function createUnderLength(key, message, style) {\n    var cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(react_1.default.createElement(react_native_1.Text, {\n        key: key,\n        style: style\n      }, cleanMessage));\n    }\n\n    length += cleanMessage.length;\n  };\n\n  var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n    var key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n      createUnderLength(key, prevPart);\n    }\n\n    var substititionPart = content.substr(substitution.offset, substitution.length);\n    createUnderLength(key + \".5\", substititionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    var lastPart = content.substr(lastOffset);\n    createUnderLength(\"-1\", lastPart);\n  }\n\n  return react_1.default.createElement(react_1.default.Fragment, null, elements);\n}\n\nexports.LogBoxMessage = LogBoxMessage;","map":{"version":3,"sources":["../../../src/error-overlay/UI/LogBoxMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAOA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAYA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,OAAD;EAAA,OACnB,OAAO,CAAC,OAAR,CAAgB,mDAAhB,EAAqE,EAArE,CADmB;AAAA,CAArB;;AAGA,SAAgB,aAAhB,CAA8B,KAA9B,EAA0C;EACxC,qBAA4C,KAAK,CAAC,OAAlD;EAAA,IAAQ,OAAR,kBAAQ,OAAR;EAAA,IAAiB,aAAjB,kBAAiB,aAAjB;;EAEA,IAAI,KAAK,CAAC,SAAN,KAAoB,IAAxB,EAA8B;IAC5B,OAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK,IAAL,EAAO,YAAY,CAAC,OAAD,CAAnB,CAAP;EACD;;EAED,IAAM,SAAS,GAAG,KAAK,CAAC,SAAN,IAAmB,IAAnB,GAA0B,KAAK,CAAC,SAAhC,GAA4C,QAA9D;EACA,IAAM,iBAAiB,GAAyB,KAAK,CAAC,KAAtD;EACA,IAAM,QAAQ,GAAkB,EAAhC;EACA,IAAI,MAAM,GAAG,CAAb;;EACA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CACxB,GADwB,EAExB,OAFwB,EAGxB,KAHwB,EAItB;IACF,IAAI,YAAY,GAAG,YAAY,CAAC,OAAD,CAA/B;;IAEA,IAAI,KAAK,CAAC,SAAN,IAAmB,IAAvB,EAA6B;MAC3B,YAAY,GAAG,YAAY,CAAC,KAAb,CAAmB,CAAnB,EAAsB,KAAK,CAAC,SAAN,GAAkB,MAAxC,CAAf;IACD;;IAED,IAAI,MAAM,GAAG,SAAb,EAAwB;MACtB,QAAQ,CAAC,IAAT,CACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK;QAAC,GAAG,EAAE,GAAN;QAAW,KAAK,EAAE;MAAlB,CAAL,EACG,YADH,CADF;IAKD;;IAED,MAAM,IAAI,YAAY,CAAC,MAAvB;EACD,CApBD;;EAsBA,IAAM,UAAU,GAAG,aAAa,CAAC,MAAd,CAAqB,UAAC,UAAD,EAAa,YAAb,EAA2B,KAA3B,EAAoC;IAC1E,IAAM,GAAG,GAAG,MAAM,CAAC,KAAD,CAAlB;;IAEA,IAAI,YAAY,CAAC,MAAb,GAAsB,UAA1B,EAAsC;MACpC,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAR,CACf,UADe,EAEf,YAAY,CAAC,MAAb,GAAsB,UAFP,CAAjB;MAKA,iBAAiB,CAAC,GAAD,EAAM,QAAN,CAAjB;IACD;;IAED,IAAM,gBAAgB,GAAG,OAAO,CAAC,MAAR,CACvB,YAAY,CAAC,MADU,EAEvB,YAAY,CAAC,MAFU,CAAzB;IAKA,iBAAiB,CAAC,GAAG,GAAG,IAAP,EAAa,gBAAb,EAA+B,iBAA/B,CAAjB;IACA,OAAO,YAAY,CAAC,MAAb,GAAsB,YAAY,CAAC,MAA1C;EACD,CAnBkB,EAmBhB,CAnBgB,CAAnB;;EAqBA,IAAI,UAAU,GAAG,OAAO,CAAC,MAAzB,EAAiC;IAC/B,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAR,CAAe,UAAf,CAAjB;IACA,iBAAiB,CAAC,IAAD,EAAO,QAAP,CAAjB;EACD;;EAED,OAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EAAG,QAAH,CAAP;AACD;;AA5DD,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { StyleProp, Text, TextStyle } from \"react-native\";\n\nimport type { Message } from \"../Data/parseLogBoxLog\";\n\ntype Props = {\n  message: Message;\n  style: StyleProp<TextStyle>;\n  plaintext?: boolean;\n  maxLength?: number;\n};\n\nconst cleanContent = (content: string) =>\n  content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, \"\");\n\nexport function LogBoxMessage(props: Props): JSX.Element {\n  const { content, substitutions }: Message = props.message;\n\n  if (props.plaintext === true) {\n    return <Text>{cleanContent(content)}</Text>;\n  }\n\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle: StyleProp<TextStyle> = props.style;\n  const elements: JSX.Element[] = [];\n  let length = 0;\n  const createUnderLength = (\n    key: string | \"-1\",\n    message: string,\n    style?: StyleProp<TextStyle>\n  ) => {\n    let cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(\n        <Text key={key} style={style}>\n          {cleanMessage}\n        </Text>\n      );\n    }\n\n    length += cleanMessage.length;\n  };\n\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.substr(\n        prevOffset,\n        substitution.offset - prevOffset\n      );\n\n      createUnderLength(key, prevPart);\n    }\n\n    const substititionPart = content.substr(\n      substitution.offset,\n      substitution.length\n    );\n\n    createUnderLength(key + \".5\", substititionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    const lastPart = content.substr(lastOffset);\n    createUnderLength(\"-1\", lastPart);\n  }\n\n  return <>{elements}</>;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}