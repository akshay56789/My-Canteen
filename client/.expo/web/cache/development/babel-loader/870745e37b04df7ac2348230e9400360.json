{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorOverlayBodyContents = exports.ErrorOverlayBody = exports.LogBoxInspector = exports.LogBoxInspectorContainer = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar LogBoxData = __importStar(require(\"./Data/LogBoxData\"));\n\nvar LogContext_1 = require(\"./Data/LogContext\");\n\nvar LogBoxStyle = __importStar(require(\"./UI/LogBoxStyle\"));\n\nvar LogBoxInspectorCodeFrame_1 = require(\"./overlay/LogBoxInspectorCodeFrame\");\n\nvar LogBoxInspectorFooter_1 = require(\"./overlay/LogBoxInspectorFooter\");\n\nvar LogBoxInspectorHeader_1 = require(\"./overlay/LogBoxInspectorHeader\");\n\nvar LogBoxInspectorMessageHeader_1 = require(\"./overlay/LogBoxInspectorMessageHeader\");\n\nvar LogBoxInspectorStackFrames_1 = require(\"./overlay/LogBoxInspectorStackFrames\");\n\nvar HEADER_TITLE_MAP = {\n  warn: \"Console Warning\",\n  error: \"Console Error\",\n  fatal: \"Uncaught Error\",\n  syntax: \"Syntax Error\",\n  static: \"Static Rendering Error (Node.js)\",\n  component: \"Render Error\"\n};\n\nfunction LogBoxInspectorContainer() {\n  var _ref = (0, LogContext_1.useLogs)(),\n      selectedLogIndex = _ref.selectedLogIndex,\n      logs = _ref.logs;\n\n  var log = logs[selectedLogIndex];\n\n  if (log == null) {\n    return null;\n  }\n\n  return react_1.default.createElement(LogBoxInspector, {\n    log: log,\n    selectedLogIndex: selectedLogIndex,\n    logs: logs\n  });\n}\n\nexports.LogBoxInspectorContainer = LogBoxInspectorContainer;\n\nfunction LogBoxInspector(_ref2) {\n  var log = _ref2.log,\n      selectedLogIndex = _ref2.selectedLogIndex,\n      logs = _ref2.logs;\n  var onDismiss = (0, react_1.useCallback)(function () {\n    var logsArray = Array.from(logs);\n\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n  var onMinimize = (0, react_1.useCallback)(function () {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n  var onChangeSelectedIndex = (0, react_1.useCallback)(function (index) {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n  (0, react_1.useEffect)(function () {\n    if (log) {\n      LogBoxData.symbolicateLogNow(\"stack\", log);\n      LogBoxData.symbolicateLogNow(\"component\", log);\n    }\n  }, [log]);\n  (0, react_1.useEffect)(function () {\n    if (logs.length > 1) {\n      var selected = selectedLogIndex;\n      var lastIndex = logs.length - 1;\n      var prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      var nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n\n      for (var type of [\"component\", \"stack\"]) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n  (0, react_1.useEffect)(function () {\n    react_native_1.Keyboard.dismiss();\n  }, []);\n\n  var _handleRetry = (0, react_1.useCallback)(function (type) {\n    LogBoxData.retrySymbolicateLogNow(type, log);\n  }, [log]);\n\n  return react_1.default.createElement(react_native_1.View, {\n    style: [react_native_1.StyleSheet.absoluteFill, {\n      flex: 1\n    }]\n  }, react_1.default.createElement(LogBoxInspectorHeader_1.LogBoxInspectorHeader, {\n    onSelectIndex: onChangeSelectedIndex,\n    level: log.level\n  }), react_1.default.createElement(ErrorOverlayBody, {\n    onRetry: _handleRetry\n  }), react_1.default.createElement(LogBoxInspectorFooter_1.LogBoxInspectorFooter, {\n    onDismiss: onDismiss,\n    onMinimize: onMinimize\n  }));\n}\n\nexports.LogBoxInspector = LogBoxInspector;\n\nfunction ErrorOverlayBody(_ref3) {\n  var onRetry = _ref3.onRetry;\n  var log = (0, LogContext_1.useSelectedLog)();\n  return react_1.default.createElement(ErrorOverlayBodyContents, {\n    log: log,\n    onRetry: onRetry\n  });\n}\n\nexports.ErrorOverlayBody = ErrorOverlayBody;\n\nfunction ErrorOverlayBodyContents(_ref4) {\n  var log = _ref4.log,\n      onRetry = _ref4.onRetry;\n\n  var _a, _b;\n\n  var _ref5 = (0, react_1.useState)(true),\n      _ref6 = _slicedToArray(_ref5, 2),\n      collapsed = _ref6[0],\n      setCollapsed = _ref6[1];\n\n  (0, react_1.useEffect)(function () {\n    setCollapsed(true);\n  }, [log]);\n  var headerTitle = (_a = HEADER_TITLE_MAP[log.isComponentError ? \"component\" : log.level]) !== null && _a !== void 0 ? _a : log.type;\n  var header = react_1.default.createElement(LogBoxInspectorMessageHeader_1.LogBoxInspectorMessageHeader, {\n    collapsed: collapsed,\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    message: log.message,\n    level: log.level,\n    title: headerTitle\n  });\n  return react_1.default.createElement(react_1.default.Fragment, null, collapsed && header, react_1.default.createElement(react_native_1.ScrollView, {\n    style: styles.scrollBody\n  }, !collapsed && header, react_1.default.createElement(LogBoxInspectorCodeFrame_1.LogBoxInspectorCodeFrame, {\n    codeFrame: log.codeFrame\n  }), react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, {\n    type: \"stack\",\n    onRetry: onRetry.bind(onRetry, \"stack\")\n  }), !!((_b = log === null || log === void 0 ? void 0 : log.componentStack) === null || _b === void 0 ? void 0 : _b.length) && react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, {\n    type: \"component\",\n    onRetry: onRetry.bind(onRetry, \"component\")\n  })));\n}\n\nexports.ErrorOverlayBodyContents = ErrorOverlayBodyContents;\nvar styles = react_native_1.StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1\n  }\n});\nexports.default = LogBoxData.withSubscription(LogBoxInspectorContainer);","map":{"version":3,"sources":["../../src/error-overlay/ErrorOverlay.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAGA,IAAA,UAAA,GAAA,YAAA,CAAA,OAAA,qBAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,qBAAA;;AACA,IAAA,WAAA,GAAA,YAAA,CAAA,OAAA,oBAAA,CAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,sCAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,mCAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,mCAAA;;AACA,IAAA,8BAAA,GAAA,OAAA,0CAAA;;AACA,IAAA,4BAAA,GAAA,OAAA,wCAAA;;AAEA,IAAM,gBAAgB,GAAG;EACvB,IAAI,EAAE,iBADiB;EAEvB,KAAK,EAAE,eAFgB;EAGvB,KAAK,EAAE,gBAHgB;EAIvB,MAAM,EAAE,cAJe;EAKvB,MAAM,EAAE,kCALe;EAMvB,SAAS,EAAE;AANY,CAAzB;;AASA,SAAgB,wBAAhB,GAAwC;EACtC,WAAmC,CAAA,GAAA,YAAA,CAAA,OAAA,GAAnC;EAAA,IAAQ,gBAAR,QAAQ,gBAAR;EAAA,IAA0B,IAA1B,QAA0B,IAA1B;;EACA,IAAM,GAAG,GAAG,IAAI,CAAC,gBAAD,CAAhB;;EACA,IAAI,GAAG,IAAI,IAAX,EAAiB;IACf,OAAO,IAAP;EACD;;EACD,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;IACd,GAAG,EAAE,GADS;IAEd,gBAAgB,EAAE,gBAFJ;IAGd,IAAI,EAAE;EAHQ,CAAhB,CADF;AAOD;;AAbD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAeA,SAAgB,eAAhB,QAQC;EAAA,IAPC,GAOD,SAPC,GAOD;EAAA,IANC,gBAMD,SANC,gBAMD;EAAA,IALC,IAKD,SALC,IAKD;EACC,IAAM,SAAS,GAAG,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,YAAW;IAIvC,IAAM,SAAS,GAAG,KAAK,CAAC,IAAN,CAAW,IAAX,CAAlB;;IACA,IAAI,gBAAgB,IAAI,IAAxB,EAA8B;MAC5B,IAAI,SAAS,CAAC,MAAV,GAAmB,CAAnB,IAAwB,CAA5B,EAA+B;QAC7B,UAAU,CAAC,cAAX,CAA0B,CAAC,CAA3B;MACD,CAFD,MAEO,IAAI,gBAAgB,IAAI,SAAS,CAAC,MAAV,GAAmB,CAA3C,EAA8C;QACnD,UAAU,CAAC,cAAX,CAA0B,gBAAgB,GAAG,CAA7C;MACD;;MAED,UAAU,CAAC,OAAX,CAAmB,SAAS,CAAC,gBAAD,CAA5B;IACD;EACF,CAdiB,EAcf,CAAC,gBAAD,CAde,CAAlB;EAgBA,IAAM,UAAU,GAAG,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,YAAW;IACxC,UAAU,CAAC,cAAX,CAA0B,CAAC,CAA3B;EACD,CAFkB,EAEhB,EAFgB,CAAnB;EAIA,IAAM,qBAAqB,GAAG,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,UAAC,KAAD,EAAwB;IAChE,UAAU,CAAC,cAAX,CAA0B,KAA1B;EACD,CAF6B,EAE3B,EAF2B,CAA9B;EAIA,CAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAK;IACb,IAAI,GAAJ,EAAS;MACP,UAAU,CAAC,iBAAX,CAA6B,OAA7B,EAAsC,GAAtC;MACA,UAAU,CAAC,iBAAX,CAA6B,WAA7B,EAA0C,GAA1C;IACD;EACF,CALD,EAKG,CAAC,GAAD,CALH;EAOA,CAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAK;IAEb,IAAI,IAAI,CAAC,MAAL,GAAc,CAAlB,EAAqB;MACnB,IAAM,QAAQ,GAAG,gBAAjB;MACA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAL,GAAc,CAAhC;MACA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmB,SAAnB,GAA+B,QAAQ,GAAG,CAA5D;MACA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAX,GAAe,SAAf,GAA2B,CAA3B,GAA+B,QAAQ,GAAG,CAA5D;;MACA,KAAK,IAAM,IAAX,IAAmB,CAAC,WAAD,EAAc,OAAd,CAAnB,EAAoD;QAClD,UAAU,CAAC,kBAAX,CAA8B,IAA9B,EAAoC,IAAI,CAAC,SAAD,CAAxC;QACA,UAAU,CAAC,kBAAX,CAA8B,IAA9B,EAAoC,IAAI,CAAC,SAAD,CAAxC;MACD;IACF;EACF,CAZD,EAYG,CAAC,IAAD,EAAO,gBAAP,CAZH;EAcA,CAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAK;IACb,cAAA,CAAA,QAAA,CAAS,OAAT;EACD,CAFD,EAEG,EAFH;;EAIA,IAAM,YAAY,GAAG,CAAA,GAAA,OAAA,CAAA,WAAA,EACnB,UAAC,IAAD,EAAoB;IAClB,UAAU,CAAC,sBAAX,CAAkC,IAAlC,EAAwC,GAAxC;EACD,CAHkB,EAInB,CAAC,GAAD,CAJmB,CAArB;;EAOA,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK;IAAC,KAAK,EAAE,CAAC,cAAA,CAAA,UAAA,CAAW,YAAZ,EAA0B;MAAE,IAAI,EAAE;IAAR,CAA1B;EAAR,CAAL,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,uBAAA,CAAA,qBAAD,EAAmB;IACjB,aAAa,EAAE,qBADE;IAEjB,KAAK,EAAE,GAAG,CAAC;EAFM,CAAnB,CADF,EAKE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;IAAC,OAAO,EAAE;EAAV,CAAjB,CALF,EAME,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,uBAAA,CAAA,qBAAD,EAAmB;IAAC,SAAS,EAAE,SAAZ;IAAuB,UAAU,EAAE;EAAnC,CAAnB,CANF,CADF;AAUD;;AA3ED,OAAA,CAAA,eAAA,GAAA,eAAA;;AA6EA,SAAgB,gBAAhB,QAIC;EAAA,IAHC,OAGD,SAHC,OAGD;EACC,IAAM,GAAG,GAAG,CAAA,GAAA,YAAA,CAAA,cAAA,GAAZ;EACA,OAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,wBAAD,EAAyB;IAAC,GAAG,EAAE,GAAN;IAAW,OAAO,EAAE;EAApB,CAAzB,CAAP;AACD;;AAPD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AASA,SAAgB,wBAAhB,QAMC;EAAA,IALC,GAKD,SALC,GAKD;EAAA,IAJC,OAID,SAJC,OAID;;;;EACC,YAAkC,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAAlC;EAAA;EAAA,IAAO,SAAP;EAAA,IAAkB,YAAlB;;EAEA,CAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAK;IACb,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD,EAEG,CAAC,GAAD,CAFH;EAIA,IAAM,WAAW,GACf,CAAA,EAAA,GAAA,gBAAgB,CAAC,GAAG,CAAC,gBAAJ,GAAuB,WAAvB,GAAqC,GAAG,CAAC,KAA1C,CAAhB,MAAgE,IAAhE,IAAgE,EAAA,KAAA,KAAA,CAAhE,GAAgE,EAAhE,GACA,GAAG,CAAC,IAFN;EAIA,IAAM,MAAM,GACV,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,8BAAA,CAAA,4BAAD,EAA6B;IAC3B,SAAS,EAAE,SADgB;IAE3B,OAAO,EAAE;MAAA,OAAM,YAAY,CAAC,CAAC,SAAF,CAAlB;IAAA,CAFkB;IAG3B,OAAO,EAAE,GAAG,CAAC,OAHc;IAI3B,KAAK,EAAE,GAAG,CAAC,KAJgB;IAK3B,KAAK,EAAE;EALoB,CAA7B,CADF;EAUA,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EACG,SAAS,IAAI,MADhB,EAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,UAAD,EAAW;IAAC,KAAK,EAAE,MAAM,CAAC;EAAf,CAAX,EACG,CAAC,SAAD,IAAc,MADjB,EAGE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,0BAAA,CAAA,wBAAD,EAAyB;IAAC,SAAS,EAAE,GAAG,CAAC;EAAhB,CAAzB,CAHF,EAIE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,4BAAA,CAAA,0BAAD,EAA2B;IACzB,IAAI,EAAC,OADoB;IAGzB,OAAO,EAAE,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,OAAtB;EAHgB,CAA3B,CAJF,EASG,CAAC,EAAC,CAAA,EAAA,GAAA,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAG,KAAA,CAAH,GAAA,GAAG,CAAE,cAAL,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,MAAtB,CAAD,IACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,4BAAA,CAAA,0BAAD,EAA2B;IACzB,IAAI,EAAC,WADoB;IAGzB,OAAO,EAAE,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,WAAtB;EAHgB,CAA3B,CAVJ,CAFF,CADF;AAsBD;;AAjDD,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAmDA,IAAM,MAAM,GAAG,cAAA,CAAA,UAAA,CAAW,MAAX,CAAkB;EAC/B,UAAU,EAAE;IACV,eAAe,EAAE,WAAW,CAAC,kBAAZ,CAA+B,CAA/B,CADP;IAEV,IAAI,EAAE;EAFI;AADmB,CAAlB,CAAf;AAOA,OAAA,CAAA,OAAA,GAAe,UAAU,CAAC,gBAAX,CAA4B,wBAA5B,CAAf","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Keyboard, ScrollView, StyleSheet, View } from \"react-native\";\n\nimport * as LogBoxData from \"./Data/LogBoxData\";\nimport { LogBoxLog, StackType } from \"./Data/LogBoxLog\";\nimport { useLogs, useSelectedLog } from \"./Data/LogContext\";\nimport * as LogBoxStyle from \"./UI/LogBoxStyle\";\nimport { LogBoxInspectorCodeFrame } from \"./overlay/LogBoxInspectorCodeFrame\";\nimport { LogBoxInspectorFooter as ErrorOverlayFooter } from \"./overlay/LogBoxInspectorFooter\";\nimport { LogBoxInspectorHeader as ErrorOverlayHeader } from \"./overlay/LogBoxInspectorHeader\";\nimport { LogBoxInspectorMessageHeader } from \"./overlay/LogBoxInspectorMessageHeader\";\nimport { LogBoxInspectorStackFrames } from \"./overlay/LogBoxInspectorStackFrames\";\n\nconst HEADER_TITLE_MAP = {\n  warn: \"Console Warning\",\n  error: \"Console Error\",\n  fatal: \"Uncaught Error\",\n  syntax: \"Syntax Error\",\n  static: \"Static Rendering Error (Node.js)\",\n  component: \"Render Error\",\n};\n\nexport function LogBoxInspectorContainer() {\n  const { selectedLogIndex, logs } = useLogs();\n  const log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return (\n    <LogBoxInspector\n      log={log}\n      selectedLogIndex={selectedLogIndex}\n      logs={logs}\n    />\n  );\n}\n\nexport function LogBoxInspector({\n  log,\n  selectedLogIndex,\n  logs,\n}: {\n  log: LogBoxLog;\n  selectedLogIndex: number;\n  logs: LogBoxLog[];\n}) {\n  const onDismiss = useCallback((): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n\n  const onMinimize = useCallback((): void => {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n\n  const onChangeSelectedIndex = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow(\"stack\", log);\n      LogBoxData.symbolicateLogNow(\"component\", log);\n    }\n  }, [log]);\n\n  useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedLogIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (const type of [\"component\", \"stack\"] as const) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n\n  useEffect(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const _handleRetry = useCallback(\n    (type: StackType) => {\n      LogBoxData.retrySymbolicateLogNow(type, log);\n    },\n    [log]\n  );\n\n  return (\n    <View style={[StyleSheet.absoluteFill, { flex: 1 }]}>\n      <ErrorOverlayHeader\n        onSelectIndex={onChangeSelectedIndex}\n        level={log.level}\n      />\n      <ErrorOverlayBody onRetry={_handleRetry} />\n      <ErrorOverlayFooter onDismiss={onDismiss} onMinimize={onMinimize} />\n    </View>\n  );\n}\n\nexport function ErrorOverlayBody({\n  onRetry,\n}: {\n  onRetry: (type: StackType) => void;\n}) {\n  const log = useSelectedLog();\n  return <ErrorOverlayBodyContents log={log} onRetry={onRetry} />;\n}\n\nexport function ErrorOverlayBodyContents({\n  log,\n  onRetry,\n}: {\n  log: LogBoxLog;\n  onRetry: (type: StackType) => void;\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [log]);\n\n  const headerTitle =\n    HEADER_TITLE_MAP[log.isComponentError ? \"component\" : log.level] ??\n    log.type;\n\n  const header = (\n    <LogBoxInspectorMessageHeader\n      collapsed={collapsed}\n      onPress={() => setCollapsed(!collapsed)}\n      message={log.message}\n      level={log.level}\n      title={headerTitle}\n    />\n  );\n\n  return (\n    <>\n      {collapsed && header}\n      <ScrollView style={styles.scrollBody}>\n        {!collapsed && header}\n\n        <LogBoxInspectorCodeFrame codeFrame={log.codeFrame} />\n        <LogBoxInspectorStackFrames\n          type=\"stack\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onRetry={onRetry.bind(onRetry, \"stack\")}\n        />\n        {!!log?.componentStack?.length && (\n          <LogBoxInspectorStackFrames\n            type=\"component\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, \"component\")}\n          />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1,\n  },\n});\n\nexport default LogBoxData.withSubscription(LogBoxInspectorContainer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}