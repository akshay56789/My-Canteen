{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport UpstreamNavigationContainer from \"./fork/NavigationContainer\";\nimport { useInitializeExpoRouter } from \"./global-state/router-store\";\nimport { SplashScreen } from \"./views/Splash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getGestureHandlerRootView() {\n  try {\n    var _ref = require(\"react-native-gesture-handler\"),\n        _GestureHandlerRootView = _ref.GestureHandlerRootView;\n\n    function GestureHandler(props) {\n      return _jsx(_GestureHandlerRootView, _objectSpread({\n        style: {\n          flex: 1\n        }\n      }, props));\n    }\n\n    if (process.env.NODE_ENV === \"development\") {\n      GestureHandler.displayName = \"GestureHandlerRootView\";\n    }\n\n    return GestureHandler;\n  } catch (_unused) {\n    return React.Fragment;\n  }\n}\n\nvar GestureHandlerRootView = getGestureHandlerRootView();\nvar INITIAL_METRICS = {\n  frame: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n};\nexport function ExpoRoot(_ref2) {\n  var context = _ref2.context,\n      location = _ref2.location;\n  return _jsx(GestureHandlerRootView, {\n    children: _jsxs(SafeAreaProvider, {\n      initialMetrics: INITIAL_METRICS,\n      children: [_jsx(ContextNavigator, {\n        context: context,\n        location: location\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar initialUrl = Platform.OS === \"web\" && typeof window !== \"undefined\" ? new URL(window.location.href) : undefined;\n\nfunction ContextNavigator(_ref3) {\n  var context = _ref3.context,\n      _ref3$location = _ref3.location,\n      initialLocation = _ref3$location === void 0 ? initialUrl : _ref3$location;\n  var store = useInitializeExpoRouter(context, initialLocation);\n\n  if (store.shouldShowTutorial()) {\n    SplashScreen.hideAsync();\n\n    if (process.env.NODE_ENV === \"development\") {\n      var Tutorial = require(\"./onboard/Tutorial\").Tutorial;\n\n      return _jsx(Tutorial, {});\n    } else {\n      return null;\n    }\n  }\n\n  var Component = store.rootComponent;\n  return _jsx(UpstreamNavigationContainer, {\n    ref: store.navigationRef,\n    initialState: store.initialState,\n    linking: store.linking,\n    onReady: store.onReady,\n    children: _jsx(Component, {})\n  });\n}","map":{"version":3,"names":["StatusBar","React","SafeAreaProvider","UpstreamNavigationContainer","useInitializeExpoRouter","SplashScreen","getGestureHandlerRootView","require","GestureHandlerRootView","GestureHandler","props","flex","process","env","NODE_ENV","displayName","Fragment","INITIAL_METRICS","frame","x","y","width","height","insets","top","left","right","bottom","ExpoRoot","context","location","initialUrl","Platform","OS","window","URL","href","undefined","ContextNavigator","initialLocation","store","shouldShowTutorial","hideAsync","Tutorial","Component","rootComponent","navigationRef","initialState","linking","onReady"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/ExpoRoot.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Platform } from \"react-native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport UpstreamNavigationContainer from \"./fork/NavigationContainer\";\nimport { useInitializeExpoRouter } from \"./global-state/router-store\";\nimport { RequireContext } from \"./types\";\nimport { SplashScreen } from \"./views/Splash\";\n\nexport type ExpoRootProps = {\n  context: RequireContext;\n  location?: URL;\n};\n\nfunction getGestureHandlerRootView() {\n  try {\n    const { GestureHandlerRootView } =\n      require(\"react-native-gesture-handler\") as typeof import(\"react-native-gesture-handler\");\n\n    // eslint-disable-next-line no-inner-declarations\n    function GestureHandler(props: any) {\n      return <GestureHandlerRootView style={{ flex: 1 }} {...props} />;\n    }\n    if (process.env.NODE_ENV === \"development\") {\n      // @ts-expect-error\n      GestureHandler.displayName = \"GestureHandlerRootView\";\n    }\n    return GestureHandler;\n  } catch {\n    return React.Fragment;\n  }\n}\n\nconst GestureHandlerRootView = getGestureHandlerRootView();\n\nconst INITIAL_METRICS = {\n  frame: { x: 0, y: 0, width: 0, height: 0 },\n  insets: { top: 0, left: 0, right: 0, bottom: 0 },\n};\n\nexport function ExpoRoot({ context, location }: ExpoRootProps) {\n  return (\n    <GestureHandlerRootView>\n      <SafeAreaProvider\n        // SSR support\n        initialMetrics={INITIAL_METRICS}\n      >\n        <ContextNavigator context={context} location={location} />\n        {/* Users can override this by adding another StatusBar element anywhere higher in the component tree. */}\n        <StatusBar style=\"auto\" />\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst initialUrl =\n  Platform.OS === \"web\" && typeof window !== \"undefined\"\n    ? new URL(window.location.href)\n    : undefined;\n\nfunction ContextNavigator({\n  context,\n  location: initialLocation = initialUrl,\n}: ExpoRootProps) {\n  const store = useInitializeExpoRouter(context, initialLocation);\n\n  if (store.shouldShowTutorial()) {\n    SplashScreen.hideAsync();\n    if (process.env.NODE_ENV === \"development\") {\n      const Tutorial = require(\"./onboard/Tutorial\").Tutorial;\n      return <Tutorial />;\n    } else {\n      // Ensure tutorial styles are stripped in production.\n      return null;\n    }\n  }\n\n  const Component = store.rootComponent;\n\n  return (\n    <UpstreamNavigationContainer\n      ref={store.navigationRef}\n      initialState={store.initialState}\n      linking={store.linking}\n      onReady={store.onReady}\n    >\n      <Component />\n    </UpstreamNavigationContainer>\n  );\n}\n"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,2BAAP;AACA,SAASC,uBAAT;AAEA,SAASC,YAAT;;;;AAOA,SAASC,yBAAT,GAAqC;EACnC,IAAI;IACF,WACEC,OAAO,CAAC,8BAAD,CADT;IAAA,IAAQC,uBAAR,QAAQA,sBAAR;;IAIA,SAASC,cAAT,CAAwBC,KAAxB,EAAoC;MAClC,OAAO,KAAC,uBAAD;QAAwB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR;MAA/B,GAAgDD,KAAhD,EAAP;IACD;;IACD,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;MAE1CL,cAAc,CAACM,WAAf,GAA6B,wBAA7B;IACD;;IACD,OAAON,cAAP;EACD,CAbD,CAaE,gBAAM;IACN,OAAOR,KAAK,CAACe,QAAb;EACD;AACF;;AAED,IAAMR,sBAAsB,GAAGF,yBAAyB,EAAxD;AAEA,IAAMW,eAAe,GAAG;EACtBC,KAAK,EAAE;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE,CAAX;IAAcC,KAAK,EAAE,CAArB;IAAwBC,MAAM,EAAE;EAAhC,CADe;EAEtBC,MAAM,EAAE;IAAEC,GAAG,EAAE,CAAP;IAAUC,IAAI,EAAE,CAAhB;IAAmBC,KAAK,EAAE,CAA1B;IAA6BC,MAAM,EAAE;EAArC;AAFc,CAAxB;AAKA,OAAO,SAASC,QAAT,QAAwD;EAAA,IAApCC,OAAoC,SAApCA,OAAoC;EAAA,IAA3BC,QAA2B,SAA3BA,QAA2B;EAC7D,OACE,KAAC,sBAAD;IAAA,UACE,MAAC,gBAAD;MAEE,cAAc,EAAEb,eAFlB;MAAA,WAIE,KAAC,gBAAD;QAAkB,OAAO,EAAEY,OAA3B;QAAoC,QAAQ,EAAEC;MAA9C,EAJF,EAME,KAAC,SAAD;QAAW,KAAK,EAAC;MAAjB,EANF;IAAA;EADF,EADF;AAYD;AAED,IAAMC,UAAU,GACdC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,OAAOC,MAAP,KAAkB,WAA3C,GACI,IAAIC,GAAJ,CAAQD,MAAM,CAACJ,QAAP,CAAgBM,IAAxB,CADJ,GAEIC,SAHN;;AAKA,SAASC,gBAAT,QAGkB;EAAA,IAFhBT,OAEgB,SAFhBA,OAEgB;EAAA,2BADhBC,QACgB;EAAA,IADNS,eACM,+BADYR,UACZ;EAChB,IAAMS,KAAK,GAAGpC,uBAAuB,CAACyB,OAAD,EAAUU,eAAV,CAArC;;EAEA,IAAIC,KAAK,CAACC,kBAAN,EAAJ,EAAgC;IAC9BpC,YAAY,CAACqC,SAAb;;IACA,IAAI9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;MAC1C,IAAM6B,QAAQ,GAAGpC,OAAO,sBAAP,CAA8BoC,QAA/C;;MACA,OAAO,KAAC,QAAD,KAAP;IACD,CAHD,MAGO;MAEL,OAAO,IAAP;IACD;EACF;;EAED,IAAMC,SAAS,GAAGJ,KAAK,CAACK,aAAxB;EAEA,OACE,KAAC,2BAAD;IACE,GAAG,EAAEL,KAAK,CAACM,aADb;IAEE,YAAY,EAAEN,KAAK,CAACO,YAFtB;IAGE,OAAO,EAAEP,KAAK,CAACQ,OAHjB;IAIE,OAAO,EAAER,KAAK,CAACS,OAJjB;IAAA,UAME,KAAC,SAAD;EANF,EADF;AAUD"},"metadata":{},"sourceType":"module"}