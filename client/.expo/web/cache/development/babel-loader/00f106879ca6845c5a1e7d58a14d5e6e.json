{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogBoxInspectorCodeFrame = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar AnsiHighlight_1 = require(\"../UI/AnsiHighlight\");\n\nvar LogBoxButton_1 = require(\"../UI/LogBoxButton\");\n\nvar LogBoxStyle = __importStar(require(\"../UI/LogBoxStyle\"));\n\nvar constants_1 = require(\"../UI/constants\");\n\nvar formatProjectFilePath_1 = require(\"../formatProjectFilePath\");\n\nvar openFileInEditor_1 = __importDefault(require(\"../modules/openFileInEditor\"));\n\nvar LogBoxInspectorSection_1 = require(\"./LogBoxInspectorSection\");\n\nfunction LogBoxInspectorCodeFrame(_ref) {\n  var codeFrame = _ref.codeFrame;\n\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    return (0, formatProjectFilePath_1.formatProjectFilePath)(\"C:\\\\Users\\\\hello\\\\OneDrive\\\\Desktop\\\\React-native\\\\canteen-project\\\\client\", codeFrame === null || codeFrame === void 0 ? void 0 : codeFrame.fileName);\n  }\n\n  function getLocation() {\n    var location = codeFrame === null || codeFrame === void 0 ? void 0 : codeFrame.location;\n\n    if (location != null) {\n      return \" (\" + location.row + \":\" + (location.column + 1) + \")\";\n    }\n\n    return null;\n  }\n\n  return react_1.default.createElement(LogBoxInspectorSection_1.LogBoxInspectorSection, {\n    heading: \"Source\"\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.box\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.frame\n  }, react_1.default.createElement(react_native_1.ScrollView, {\n    horizontal: true\n  }, react_1.default.createElement(AnsiHighlight_1.Ansi, {\n    style: styles.content,\n    text: codeFrame.content\n  }))), react_1.default.createElement(LogBoxButton_1.LogBoxButton, {\n    backgroundColor: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getBackgroundDarkColor(1)\n    },\n    style: styles.button,\n    onPress: function onPress() {\n      var _a, _b;\n\n      (0, openFileInEditor_1.default)(codeFrame.fileName, (_b = (_a = codeFrame.location) === null || _a === void 0 ? void 0 : _a.row) !== null && _b !== void 0 ? _b : 0);\n    }\n  }, react_1.default.createElement(react_native_1.Text, {\n    selectable: false,\n    style: styles.fileText\n  }, getFileName(), getLocation()))));\n}\n\nexports.LogBoxInspectorCodeFrame = LogBoxInspectorCodeFrame;\nvar styles = react_native_1.StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    borderWidth: 1,\n    borderColor: \"#323232\",\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: constants_1.CODE_FONT\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: \"center\",\n    flex: 1,\n    fontSize: 16,\n    includeFontPadding: false,\n    fontFamily: constants_1.CODE_FONT\n  }\n});","map":{"version":3,"sources":["../../../src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\n\nimport type { CodeFrame } from \"../Data/parseLogBoxLog\";\nimport { Ansi } from \"../UI/AnsiHighlight\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { CODE_FONT } from \"../UI/constants\";\nimport { formatProjectFilePath } from \"../formatProjectFilePath\";\nimport openFileInEditor from \"../modules/openFileInEditor\";\nimport { LogBoxInspectorSection } from \"./LogBoxInspectorSection\";\n\ndeclare const process: any;\n\nexport function LogBoxInspectorCodeFrame({\n  codeFrame,\n}: {\n  codeFrame?: CodeFrame;\n}) {\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    return formatProjectFilePath(\n      process.env.EXPO_PROJECT_ROOT,\n      codeFrame?.fileName\n    );\n  }\n\n  function getLocation() {\n    const location = codeFrame?.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\">\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <Ansi style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: \"transparent\",\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}\n        >\n          <Text selectable={false} style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    borderWidth: 1,\n    borderColor: \"#323232\",\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: CODE_FONT,\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: \"center\",\n    flex: 1,\n    fontSize: 16,\n    includeFontPadding: false,\n    fontFamily: CODE_FONT,\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}