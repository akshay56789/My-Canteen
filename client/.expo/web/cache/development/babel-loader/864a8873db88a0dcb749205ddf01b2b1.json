{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { useContextKey } from \"../Route\";\nimport { useSortedScreens } from \"../useScreens\";\nimport { Screen } from \"../views/Screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useFilterScreenChildren(children) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      isCustomNavigator = _ref.isCustomNavigator,\n      contextKey = _ref.contextKey;\n\n  return React.useMemo(function () {\n    var customChildren = [];\n    var screens = React.Children.map(children, function (child) {\n      if (React.isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\"<Screen /> component in `default export` at `app\" + contextKey + \"/_layout` must have a `name` prop when used as a child of a Layout Route.\");\n        }\n\n        if (process.env.NODE_ENV !== \"production\") {\n          if ([\"children\", \"component\", \"getComponent\"].some(function (key) {\n            return key in child.props;\n          })) {\n            throw new Error(\"<Screen /> component in `default export` at `app\" + contextKey + \"/_layout` must not have a `children`, `component`, or `getComponent` prop when used as a child of a Layout Route\");\n          }\n        }\n\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\"Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \\\"app\" + contextKey + \"/_layout\\\"\");\n        }\n      }\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var names = screens == null ? void 0 : screens.map(function (screen) {\n        return screen.name;\n      });\n\n      if (names && new Set(names).size !== names.length) {\n        throw new Error(\"Screen names must be unique: \" + names);\n      }\n    }\n\n    return {\n      screens: screens,\n      children: customChildren\n    };\n  }, [children]);\n}\nexport function withLayoutContext(Nav, processor) {\n  var Navigator = React.forwardRef(function (_ref2, ref) {\n    var userDefinedChildren = _ref2.children,\n        props = _objectWithoutProperties(_ref2, _excluded);\n\n    var contextKey = useContextKey();\n\n    var _useFilterScreenChild = useFilterScreenChildren(userDefinedChildren, {\n      contextKey: contextKey\n    }),\n        screens = _useFilterScreenChild.screens;\n\n    var processed = processor ? processor(screens != null ? screens : []) : screens;\n    var sorted = useSortedScreens(processed != null ? processed : []);\n\n    if (!sorted.length) {\n      return null;\n    }\n\n    return _jsx(Nav, _objectSpread(_objectSpread({}, props), {}, {\n      id: contextKey,\n      ref: ref,\n      children: sorted\n    }));\n  });\n  Navigator.Screen = Screen;\n  return Navigator;\n}","map":{"version":3,"names":["React","useContextKey","useSortedScreens","Screen","useFilterScreenChildren","children","isCustomNavigator","contextKey","useMemo","customChildren","screens","Children","map","child","isValidElement","type","props","name","Error","process","env","NODE_ENV","some","key","push","console","warn","names","screen","Set","size","length","withLayoutContext","Nav","processor","Navigator","forwardRef","ref","userDefinedChildren","processed","sorted"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/layouts/withLayoutContext.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useContextKey } from \"../Route\";\nimport { PickPartial } from \"../types\";\nimport { useSortedScreens, ScreenProps } from \"../useScreens\";\nimport { Screen } from \"../views/Screen\";\n\nexport function useFilterScreenChildren(\n  children: React.ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return React.useMemo(() => {\n    const customChildren: any[] = [];\n    const screens = React.Children.map(children, (child) => {\n      if (React.isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n          );\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n          if (\n            [\"children\", \"component\", \"getComponent\"].some(\n              (key) => key in child.props\n            )\n          ) {\n            throw new Error(\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n            );\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n          );\n        }\n      }\n    });\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== \"production\") {\n      // Assert if names are not unique\n      const names = screens?.map((screen) => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error(\"Screen names must be unique: \" + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n    };\n  }, [children]);\n}\n\n/** Return a navigator that automatically injects matched routes and renders nothing when there are no children. Return type with children prop optional */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends React.ComponentType<any>\n>(\n  Nav: T,\n  processor?: (options: ScreenProps<TOptions>[]) => ScreenProps<TOptions>[]\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<PickPartial<React.ComponentProps<T>, \"children\">> &\n    React.RefAttributes<unknown>\n> & {\n  Screen: (props: ScreenProps<TOptions>) => null;\n} {\n  const Navigator = React.forwardRef(\n    (\n      {\n        children: userDefinedChildren,\n        ...props\n      }: PickPartial<React.ComponentProps<T>, \"children\">,\n      ref\n    ) => {\n      const contextKey = useContextKey();\n\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? []);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return (\n        // @ts-expect-error\n        <Nav {...props} id={contextKey} ref={ref} children={sorted} />\n      );\n    }\n  );\n\n  // @ts-expect-error\n  Navigator.Screen = Screen;\n  // @ts-expect-error\n  return Navigator;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}