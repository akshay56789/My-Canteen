{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UpdatePassword() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPassword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      correct = _useState6[0],\n      setCorrect = _useState6[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        margin: \"20px\",\n        fontSize: 30\n      },\n      children: \"Change password\"\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {\n        value: current,\n        onChangeText: function onChangeText(text) {\n          return setCurrent(text);\n        },\n        placeholder: \"Current Password\",\n        style: {\n          backgroundColor: \"#f6f6f6\",\n          margin: \"10px\",\n          borderRadius: 5,\n          height: 50,\n          paddingHorizontal: 10,\n          fontSize: 16\n        }\n      }), _jsx(TextInput, {\n        value: newPassword,\n        onChangeText: function onChangeText(text) {\n          return setNewPassword(text);\n        },\n        placeholder: \"New Password\",\n        style: {\n          backgroundColor: \"#f6f6f6\",\n          margin: \"10px\",\n          borderRadius: 5,\n          height: 50,\n          paddingHorizontal: 10,\n          fontSize: 16\n        }\n      }), _jsx(TextInput, {\n        value: correct,\n        onChangeText: function onChangeText(text) {\n          return setCorrect(text);\n        },\n        placeholder: \"Re-enter password\",\n        style: {\n          backgroundColor: \"#f6f6f6\",\n          margin: \"10px\",\n          borderRadius: 5,\n          height: 50,\n          paddingHorizontal: 10,\n          fontSize: 16\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      disabled: !newPassword && !correct && !current,\n      children: _jsx(Text, {\n        style: {\n          backgroundColor: \"#408cc9\",\n          borderRadius: 5,\n          padding: \"12px\",\n          height: 50,\n          fontSize: 16,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          marginLeft: \"50px\",\n          marginTop: \"50px\",\n          marginRight: \"50px\",\n          color: \"#ffffff\"\n        },\n        children: \"Submit\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useContext","useState","TextInput","UpdatePassword","current","setCurrent","newPassword","setNewPassword","correct","setCorrect","display","flexDirection","justifyContent","margin","fontSize","text","backgroundColor","borderRadius","height","paddingHorizontal","padding","marginLeft","marginTop","marginRight","color"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/app/profile/settingsPassword.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  Touchable,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\nexport default function UpdatePassword() {\r\n  const [current, setCurrent] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [correct, setCorrect] = useState(\"\");\r\n\r\n  return (\r\n    <View>\r\n      <Text\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n          margin: \"20px\",\r\n          fontSize: 30,\r\n        }}\r\n      >\r\n        Change password\r\n      </Text>\r\n      <View>\r\n        <TextInput\r\n          value={current}\r\n          onChangeText={(text) => setCurrent(text)}\r\n          placeholder=\"Current Password\"\r\n          style={{\r\n            backgroundColor: \"#f6f6f6\",\r\n            margin: \"10px\",\r\n            borderRadius: 5,\r\n            height: 50,\r\n            paddingHorizontal: 10,\r\n            fontSize: 16,\r\n          }}\r\n        />\r\n        <TextInput\r\n          value={newPassword}\r\n          onChangeText={(text) => setNewPassword(text)}\r\n          placeholder=\"New Password\"\r\n          style={{\r\n            backgroundColor: \"#f6f6f6\",\r\n            margin: \"10px\",\r\n            borderRadius: 5,\r\n            height: 50,\r\n            paddingHorizontal: 10,\r\n            fontSize: 16,\r\n          }}\r\n        />\r\n        <TextInput\r\n          value={correct}\r\n          onChangeText={(text) => setCorrect(text)}\r\n          placeholder=\"Re-enter password\"\r\n          style={{\r\n            backgroundColor: \"#f6f6f6\",\r\n            margin: \"10px\",\r\n            borderRadius: 5,\r\n            height: 50,\r\n            paddingHorizontal: 10,\r\n            fontSize: 16,\r\n          }}\r\n        />\r\n      </View>\r\n      <TouchableOpacity disabled={!newPassword && !correct && !current}>\r\n        <Text\r\n          style={{\r\n            backgroundColor: \"#408cc9\",\r\n            borderRadius: 5,\r\n            padding: \"12px\",\r\n            height: 50,\r\n            fontSize: 16,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            marginLeft: \"50px\",\r\n            marginTop: \"50px\",\r\n            marginRight: \"50px\",\r\n            color: \"#ffffff\",\r\n          }}\r\n        >\r\n          Submit\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;;;;;AAQA,SAASC,SAAT,QAA0B,8BAA1B;;;AAEA,eAAe,SAASC,cAAT,GAA0B;EACvC,gBAA8BF,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAsCJ,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOK,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAA8BN,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MACE,KAAK,EAAE;QACLC,OAAO,EAAE,MADJ;QAELC,aAAa,EAAE,KAFV;QAGLC,cAAc,EAAE,QAHX;QAILC,MAAM,EAAE,MAJH;QAKLC,QAAQ,EAAE;MALL,CADT;MAAA,UAQC;IARD,EADF,EAYE,MAAC,IAAD;MAAA,WACE,KAAC,SAAD;QACE,KAAK,EAAEV,OADT;QAEE,YAAY,EAAE,sBAACW,IAAD;UAAA,OAAUV,UAAU,CAACU,IAAD,CAApB;QAAA,CAFhB;QAGE,WAAW,EAAC,kBAHd;QAIE,KAAK,EAAE;UACLC,eAAe,EAAE,SADZ;UAELH,MAAM,EAAE,MAFH;UAGLI,YAAY,EAAE,CAHT;UAILC,MAAM,EAAE,EAJH;UAKLC,iBAAiB,EAAE,EALd;UAMLL,QAAQ,EAAE;QANL;MAJT,EADF,EAcE,KAAC,SAAD;QACE,KAAK,EAAER,WADT;QAEE,YAAY,EAAE,sBAACS,IAAD;UAAA,OAAUR,cAAc,CAACQ,IAAD,CAAxB;QAAA,CAFhB;QAGE,WAAW,EAAC,cAHd;QAIE,KAAK,EAAE;UACLC,eAAe,EAAE,SADZ;UAELH,MAAM,EAAE,MAFH;UAGLI,YAAY,EAAE,CAHT;UAILC,MAAM,EAAE,EAJH;UAKLC,iBAAiB,EAAE,EALd;UAMLL,QAAQ,EAAE;QANL;MAJT,EAdF,EA2BE,KAAC,SAAD;QACE,KAAK,EAAEN,OADT;QAEE,YAAY,EAAE,sBAACO,IAAD;UAAA,OAAUN,UAAU,CAACM,IAAD,CAApB;QAAA,CAFhB;QAGE,WAAW,EAAC,mBAHd;QAIE,KAAK,EAAE;UACLC,eAAe,EAAE,SADZ;UAELH,MAAM,EAAE,MAFH;UAGLI,YAAY,EAAE,CAHT;UAILC,MAAM,EAAE,EAJH;UAKLC,iBAAiB,EAAE,EALd;UAMLL,QAAQ,EAAE;QANL;MAJT,EA3BF;IAAA,EAZF,EAqDE,KAAC,gBAAD;MAAkB,QAAQ,EAAE,CAACR,WAAD,IAAgB,CAACE,OAAjB,IAA4B,CAACJ,OAAzD;MAAA,UACE,KAAC,IAAD;QACE,KAAK,EAAE;UACLY,eAAe,EAAE,SADZ;UAELC,YAAY,EAAE,CAFT;UAGLG,OAAO,EAAE,MAHJ;UAILF,MAAM,EAAE,EAJH;UAKLJ,QAAQ,EAAE,EALL;UAMLJ,OAAO,EAAE,MANJ;UAOLC,aAAa,EAAE,KAPV;UAQLC,cAAc,EAAE,QARX;UASLS,UAAU,EAAE,MATP;UAULC,SAAS,EAAE,MAVN;UAWLC,WAAW,EAAE,MAXR;UAYLC,KAAK,EAAE;QAZF,CADT;QAAA,UAeC;MAfD;IADF,EArDF;EAAA,EADF;AA4ED"},"metadata":{},"sourceType":"module"}