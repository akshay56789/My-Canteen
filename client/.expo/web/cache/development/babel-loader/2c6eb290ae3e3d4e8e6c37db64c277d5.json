{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar expo_modules_core_1 = require(\"expo-modules-core\");\n\nvar qs_1 = __importDefault(require(\"qs\"));\n\nvar getDevServer = function getDevServer() {\n  if (!expo_modules_core_1.Platform.isDOMAvailable) {\n    return {\n      bundleLoadedFromServer: true,\n      fullBundleUrl: \"\",\n      url: \"\"\n    };\n  }\n\n  return {\n    bundleLoadedFromServer: true,\n\n    get fullBundleUrl() {\n      if ((document === null || document === void 0 ? void 0 : document.currentScript) && \"src\" in document.currentScript) {\n        return document.currentScript.src;\n      }\n\n      var url = window.location.toString();\n      var query = qs_1.default.parse(url);\n      return location.origin + location.pathname + \"?\" + qs_1.default.stringify(_objectSpread(_objectSpread({}, query), {}, {\n        platform: expo_modules_core_1.Platform.OS\n      }));\n    },\n\n    url: location.origin + location.pathname\n  };\n};\n\nmodule.exports = getDevServer;\nexports.default = getDevServer;","map":{"version":3,"sources":["../src/getDevServer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,IAAA,GAAA,eAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,IAAM,YAAY,GAAG,SAAf,YAAe,GAAK;EAExB,IAAI,CAAC,mBAAA,CAAA,QAAA,CAAS,cAAd,EAA8B;IAC5B,OAAO;MACL,sBAAsB,EAAE,IADnB;MAEL,aAAa,EAAE,EAFV;MAGL,GAAG,EAAE;IAHA,CAAP;EAKD;;EAED,OAAO;IAEL,sBAAsB,EAAE,IAFnB;;IAKL,IAAI,aAAJ,GAAiB;MACf,IAAI,CAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,aAAV,KAA2B,SAAS,QAAQ,CAAC,aAAjD,EAAgE;QAC9D,OAAO,QAAQ,CAAC,aAAT,CAAuB,GAA9B;MACD;;MAED,IAAM,GAAG,GAAG,MAAM,CAAC,QAAP,CAAgB,QAAhB,EAAZ;MACA,IAAM,KAAK,GAAG,IAAA,CAAA,OAAA,CAAG,KAAH,CAAS,GAAT,CAAd;MAEA,OACE,QAAQ,CAAC,MAAT,GACA,QAAQ,CAAC,QADT,GAEA,GAFA,GAGA,IAAA,CAAA,OAAA,CAAG,SAAH,iCAAkB,KAAlB;QAAyB,QAAQ,EAAE,mBAAA,CAAA,QAAA,CAAS;MAA5C,GAJF;IAMD,CAnBI;;IAoBL,GAAG,EAAE,QAAQ,CAAC,MAAT,GAAkB,QAAQ,CAAC;EApB3B,CAAP;AAsBD,CAhCD;;AAkCA,MAAM,CAAC,OAAP,GAAiB,YAAjB;AACA,OAAA,CAAA,OAAA,GAAe,YAAf","sourcesContent":["import { Platform } from \"expo-modules-core\";\nimport qs from \"qs\";\n\nconst getDevServer = () => {\n  // Disable for SSR\n  if (!Platform.isDOMAvailable) {\n    return {\n      bundleLoadedFromServer: true,\n      fullBundleUrl: \"\",\n      url: \"\",\n    };\n  }\n\n  return {\n    // The bundle is always loaded from a server in the browser.\n    bundleLoadedFromServer: true,\n\n    /** URL but ensures that platform query param is added. */\n    get fullBundleUrl() {\n      if (document?.currentScript && \"src\" in document.currentScript) {\n        return document.currentScript.src;\n      }\n\n      const url = window.location.toString();\n      const query = qs.parse(url);\n\n      return (\n        location.origin +\n        location.pathname +\n        \"?\" +\n        qs.stringify({ ...query, platform: Platform.OS })\n      );\n    },\n    url: location.origin + location.pathname,\n  };\n};\n\nmodule.exports = getDevServer;\nexport default getDevServer;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}