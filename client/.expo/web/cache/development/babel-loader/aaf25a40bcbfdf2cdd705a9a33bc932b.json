{"ast":null,"code":"import * as React from \"react\";\nimport { useOptionalNavigation } from \"./link/useLoadedNavigation\";\nexport function useFocusEffect(effect, do_not_pass_a_second_prop) {\n  var navigation = useOptionalNavigation();\n\n  if (do_not_pass_a_second_prop !== undefined) {\n    var message = \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" + \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" + \"useFocusEffect(\\n\" + \"  React.useCallback(() => {\\n\" + \"    // Your code here\\n\" + \"  }, [depA, depB])\\n\" + \");\\n\\n\" + \"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";\n    console.error(message);\n  }\n\n  React.useEffect(function () {\n    if (!navigation) {\n      return;\n    }\n\n    var isFocused = false;\n    var cleanup;\n\n    var callback = function callback() {\n      var destroy = effect();\n\n      if (destroy === undefined || typeof destroy === \"function\") {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        var _message = \"An effect function must not return anything besides a function, which is used for clean-up.\";\n\n        if (destroy === null) {\n          _message += \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof destroy.then === \"function\") {\n          _message += \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" + \"Instead, write the async function inside your effect \" + \"and call it immediately:\\n\\n\" + \"useFocusEffect(\\n\" + \"  React.useCallback(() => {\\n\" + \"    async function fetchData() {\\n\" + \"      // You can await here\\n\" + \"      const response = await MyAPI.getData(someId);\\n\" + \"      // ...\\n\" + \"    }\\n\\n\" + \"    fetchData();\\n\" + \"  }, [someId])\\n\" + \");\\n\\n\" + \"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";\n        } else {\n          _message += \" You returned '\" + JSON.stringify(destroy) + \"'.\";\n        }\n\n        console.error(_message);\n      }\n    };\n\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    var unsubscribeFocus = navigation.addListener(\"focus\", function () {\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n    var unsubscribeBlur = navigation.addListener(\"blur\", function () {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n    return function () {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}","map":{"version":3,"names":["React","useOptionalNavigation","useFocusEffect","effect","do_not_pass_a_second_prop","navigation","undefined","message","console","error","useEffect","isFocused","cleanup","callback","destroy","process","env","NODE_ENV","then","JSON","stringify","unsubscribeFocus","addListener","unsubscribeBlur"],"sources":["C:/Users/hello/OneDrive/Desktop/React-native/canteen-project/client/node_modules/expo-router/src/useFocusEffect.tsx"],"sourcesContent":["// A fork of `useFocusEffect` that waits for the navigation state to load before\n// running the effect. This is especially useful for native redirects.\nimport * as React from \"react\";\n\nimport { useOptionalNavigation } from \"./link/useLoadedNavigation\";\n\ntype EffectCallback = () => undefined | void | (() => void);\n\n/**\n * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n * This can be used to perform side-effects such as fetching data or subscribing to events.\n * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n *\n * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n */\nexport function useFocusEffect(\n  effect: EffectCallback,\n  do_not_pass_a_second_prop?: never\n) {\n  const navigation = useOptionalNavigation();\n\n  if (do_not_pass_a_second_prop !== undefined) {\n    const message =\n      \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" +\n      \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" +\n      \"useFocusEffect(\\n\" +\n      \"  React.useCallback(() => {\\n\" +\n      \"    // Your code here\\n\" +\n      \"  }, [depA, depB])\\n\" +\n      \");\\n\\n\" +\n      \"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";\n\n    console.error(message);\n  }\n\n  React.useEffect(() => {\n    if (!navigation) {\n      return;\n    }\n\n    let isFocused = false;\n    let cleanup: undefined | void | (() => void);\n\n    const callback = () => {\n      const destroy = effect();\n\n      if (destroy === undefined || typeof destroy === \"function\") {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        let message =\n          \"An effect function must not return anything besides a function, which is used for clean-up.\";\n\n        if (destroy === null) {\n          message +=\n            \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof (destroy as any).then === \"function\") {\n          message +=\n            \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" +\n            \"Instead, write the async function inside your effect \" +\n            \"and call it immediately:\\n\\n\" +\n            \"useFocusEffect(\\n\" +\n            \"  React.useCallback(() => {\\n\" +\n            \"    async function fetchData() {\\n\" +\n            \"      // You can await here\\n\" +\n            \"      const response = await MyAPI.getData(someId);\\n\" +\n            \"      // ...\\n\" +\n            \"    }\\n\\n\" +\n            \"    fetchData();\\n\" +\n            \"  }, [someId])\\n\" +\n            \");\\n\\n\" +\n            \"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";\n        } else {\n          message += ` You returned '${JSON.stringify(destroy)}'.`;\n        }\n\n        console.error(message);\n      }\n    };\n\n    // We need to run the effect on intial render/dep changes if the screen is focused\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    const unsubscribeFocus = navigation.addListener(\"focus\", () => {\n      // If callback was already called for focus, avoid calling it again\n      // The focus event may also fire on intial render, so we guard against runing the effect twice\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n\n    const unsubscribeBlur = navigation.addListener(\"blur\", () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n\n    return () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}\n"],"mappings":"AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,qBAAT;AAWA,OAAO,SAASC,cAAT,CACLC,MADK,EAELC,yBAFK,EAGL;EACA,IAAMC,UAAU,GAAGJ,qBAAqB,EAAxC;;EAEA,IAAIG,yBAAyB,KAAKE,SAAlC,EAA6C;IAC3C,IAAMC,OAAO,GACX,yFACA,8EADA,GAEA,mBAFA,GAGA,+BAHA,GAIA,yBAJA,GAKA,sBALA,GAMA,QANA,GAOA,oEARF;IAUAC,OAAO,CAACC,KAAR,CAAcF,OAAd;EACD;;EAEDP,KAAK,CAACU,SAAN,CAAgB,YAAM;IACpB,IAAI,CAACL,UAAL,EAAiB;MACf;IACD;;IAED,IAAIM,SAAS,GAAG,KAAhB;IACA,IAAIC,OAAJ;;IAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;MACrB,IAAMC,OAAO,GAAGX,MAAM,EAAtB;;MAEA,IAAIW,OAAO,KAAKR,SAAZ,IAAyB,OAAOQ,OAAP,KAAmB,UAAhD,EAA4D;QAC1D,OAAOA,OAAP;MACD;;MAED,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QACzC,IAAIV,QAAO,GACT,6FADF;;QAGA,IAAIO,OAAO,KAAK,IAAhB,EAAsB;UACpBP,QAAO,IACL,kGADF;QAED,CAHD,MAGO,IAAI,OAAQO,OAAD,CAAiBI,IAAxB,KAAiC,UAArC,EAAiD;UACtDX,QAAO,IACL,0FACA,uDADA,GAEA,8BAFA,GAGA,mBAHA,GAIA,+BAJA,GAKA,oCALA,GAMA,+BANA,GAOA,uDAPA,GAQA,gBARA,GASA,WATA,GAUA,oBAVA,GAWA,kBAXA,GAYA,QAZA,GAaA,oEAdF;QAeD,CAhBM,MAgBA;UACLA,QAAO,wBAAsBY,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAtB,OAAP;QACD;;QAEDN,OAAO,CAACC,KAAR,CAAcF,QAAd;MACD;IACF,CApCD;;IAuCA,IAAIF,UAAU,CAACM,SAAX,EAAJ,EAA4B;MAC1BC,OAAO,GAAGC,QAAQ,EAAlB;MACAF,SAAS,GAAG,IAAZ;IACD;;IAED,IAAMU,gBAAgB,GAAGhB,UAAU,CAACiB,WAAX,CAAuB,OAAvB,EAAgC,YAAM;MAG7D,IAAIX,SAAJ,EAAe;QACb;MACD;;MAED,IAAIC,OAAO,KAAKN,SAAhB,EAA2B;QACzBM,OAAO;MACR;;MAEDA,OAAO,GAAGC,QAAQ,EAAlB;MACAF,SAAS,GAAG,IAAZ;IACD,CAbwB,CAAzB;IAeA,IAAMY,eAAe,GAAGlB,UAAU,CAACiB,WAAX,CAAuB,MAAvB,EAA+B,YAAM;MAC3D,IAAIV,OAAO,KAAKN,SAAhB,EAA2B;QACzBM,OAAO;MACR;;MAEDA,OAAO,GAAGN,SAAV;MACAK,SAAS,GAAG,KAAZ;IACD,CAPuB,CAAxB;IASA,OAAO,YAAM;MACX,IAAIC,OAAO,KAAKN,SAAhB,EAA2B;QACzBM,OAAO;MACR;;MAEDS,gBAAgB;MAChBE,eAAe;IAChB,CAPD;EAQD,CApFD,EAoFG,CAACpB,MAAD,EAASE,UAAT,CApFH;AAqFD"},"metadata":{},"sourceType":"module"}